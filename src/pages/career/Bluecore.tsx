import { GradientText } from '../../components/GradientText';
import React from 'react';
import { Link } from 'react-router-dom';
import styles from './ProjectPage.module.css';

export const Bluecore: React.FC = () => {
  return (
    <div className={styles.container}>
      <Link to="/career" className={styles.backLink}>‚Üê Back to Career Overview</Link>
      
      <header className={styles.hero}>
        <GradientText as="h1">Bluecore Projects</GradientText>
        <p className={styles.subtitle}>Staff Engineer | June 2021 - September 2022</p>
        <p className={styles.lead}>
          Led frontend platform architecture and modernization initiatives at marketing technology platform 
          serving major retail brands.
        </p>
      </header>

      <section className={styles.section}>
        <div className={styles.projectDetail}>
          <h2>TypeScript Migration & Component Library (2021-2022)</h2>
          
          <div className={styles.subsection}>
            <h3>The Challenge</h3>
            <p>
              Legacy component library lacked type safety, modern CSS architecture, and consistent patterns. 
              Needed comprehensive modernization while maintaining backward compatibility.
            </p>
          </div>

          <div className={styles.subsection}>
            <h3>Technical Approach</h3>
            
            <h4>TypeScript Migration</h4>
            <ul>
              <li>Led migration of entire component library to TypeScript</li>
              <li>Created type-safe patterns for common UI components</li>
              <li>Established TypeScript best practices and guidelines</li>
              <li>Incremental migration strategy to avoid breaking changes</li>
            </ul>
            
            <h4>Modern CSS Architecture</h4>
            <ul>
              <li>Standardized component library with modern CSS patterns</li>
              <li>Implemented CSS variables for theming</li>
              <li>Created responsive layout systems</li>
              <li>Improved accessibility and performance</li>
            </ul>
          </div>

          <div className={styles.subsection}>
            <h3>Technologies</h3>
            <div className={styles.techTags}>
              <span className={styles.techTag}>TypeScript</span>
              <span className={styles.techTag}>React</span>
              <span className={styles.techTag}>Modern CSS</span>
              <span className={styles.techTag}>Component Design</span>
            </div>
          </div>

          <div className={styles.subsection}>
            <h3>Impact</h3>
            <ul>
              <li>Modernized entire frontend codebase</li>
              <li>Improved developer experience and velocity</li>
              <li>Reduced bugs through type safety</li>
              <li>Established scalable patterns for future development</li>
            </ul>
          </div>
        </div>

        <div className={styles.projectDetail}>
          <h2>Autogenerated API Client with gRPC/HTTP Transcoding (2021)</h2>
          
          <div className={styles.subsection}>
            <h3>The Challenge</h3>
            <p>
              Manual API client maintenance was error-prone and time-consuming. Needed automated solution 
              that stayed in sync with backend changes.
            </p>
          </div>

          <div className={styles.subsection}>
            <h3>Technical Approach</h3>
            <ul>
              <li>Architected autogenerated API client system</li>
              <li>Implemented gRPC/HTTP transcoding for seamless protocol translation</li>
              <li>Created code generation pipeline from API definitions</li>
              <li>Built type-safe client with automatic updates</li>
              <li>Designed error handling and retry logic</li>
            </ul>
          </div>

          <div className={styles.subsection}>
            <h3>Technologies</h3>
            <div className={styles.techTags}>
              <span className={styles.techTag}>TypeScript</span>
              <span className={styles.techTag}>gRPC</span>
              <span className={styles.techTag}>HTTP Transcoding</span>
              <span className={styles.techTag}>Code Generation</span>
            </div>
          </div>

          <div className={styles.subsection}>
            <h3>Impact</h3>
            <ul>
              <li>Eliminated manual API client maintenance</li>
              <li>Reduced API-related bugs significantly</li>
              <li>Improved frontend/backend contract clarity</li>
              <li>Accelerated feature development velocity</li>
            </ul>
          </div>
        </div>

        <div className={styles.projectDetail}>
          <h2>Weekly TypeScript & React Training (2021-2022)</h2>
          
          <div className={styles.subsection}>
            <h3>The Challenge</h3>
            <p>
              Team needed upskilling on modern TypeScript and React patterns to effectively use new platform infrastructure.
            </p>
          </div>

          <div className={styles.subsection}>
            <h3>Technical Approach</h3>
            <ul>
              <li>Designed comprehensive training curriculum</li>
              <li>Taught weekly classes on TypeScript fundamentals</li>
              <li>Covered advanced React patterns and best practices</li>
              <li>Provided hands-on exercises and code reviews</li>
              <li>Created learning resources and documentation</li>
            </ul>
          </div>

          <div className={styles.subsection}>
            <h3>Impact</h3>
            <ul>
              <li>Upskilled entire engineering team</li>
              <li>Improved code quality across organization</li>
              <li>Accelerated adoption of new patterns</li>
              <li>Built culture of continuous learning</li>
            </ul>
          </div>
        </div>
      </section>

      <section className={styles.section}>
        <h2>Key Themes</h2>
        <ul className={styles.themesList}>
          <li><strong>Platform Thinking:</strong> Built infrastructure that serves entire organization</li>
          <li><strong>Developer Experience:</strong> Focused on tools and patterns that make engineers more effective</li>
          <li><strong>Type Safety:</strong> Championed TypeScript adoption throughout codebase</li>
          <li><strong>Knowledge Sharing:</strong> Regular teaching and mentorship to uplift entire team</li>
        </ul>
      </section>
    </div>
  );
};
